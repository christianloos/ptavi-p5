 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.


2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:

 ** ¿Cuántos paquetes componen la captura?
    - Hay un total de 954 paquetes.
    
 ** ¿Cuánto tiempo dura la captura?
    - La captura dura 56 segundos con algunas milésimas.
    
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
    - La captura se ha realizado en la IP 192.168.1.34, la cual es una dirección privada. Las direcciones del grupo 192.168.0.0 pertenecen a la Clase C, usadas en compañías medias y pequeños proveedores de internet.


3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.

 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
    - El protocolo UDP tiene un porcentaje de paquetes mucho mayor que TCP. Esto es lo adecuado ya que en aplicaciones de tiempo real TCP no sirve por el tiempo que supone ir verificando la recepción de cada paquete de datos, y los protocolos como RTP o RTCP se encapsulan sobre UDP.
    
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
    - Podemos observar también Ethernet, IPv4, SIP, RTP, RTCP, HTTP, ICMP y ARP.


4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.

 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
    - En los segundos 7, 14, 16, 38, 39, 46 y 55.
    
 ** Y los paquetes con RTP, ¿cuándo se envían?
    - Comienzan a enviarse en el segundo 16, una vez que se ha establecido la sesión mediante SIP, y dejan de enviarse cuando se cierra esta sesión, en el segundo 38.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.

 ** ¿Qué servicio es el utilizado en estas tramas?
    - Utilizan DNS
    
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
    - La dirección del servidor DNS es 80.58.61.250
    
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
    - 86.64.162.35
    
 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
    - Es la IP del cliente invertida, que se realiza como resolución inversa para comprobar que la dirección IP que se ha recibido es la que se pedía en un principio.


6. A continuación, hay más de una docena de tramas TCP/HTTP.

 ** ¿Podrías decir la URL que se está pidiendo?
    - Pide la URL http://ekiga.net/ip/
    
 ** ¿Qué user agent (UA) la está pidiendo?
    - El agente que la pide es Ekiga
    
 ** ¿Qué devuelve el servidor?
    - Devuelve un 200 OK, por lo que el recurso que se ha pedido viaja en el cuerpo de esta trama.
    
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
    - Aparece la dirección IP 212.128.254.152. Al encontrarnos tras un NAT observamos que el recurso es diferente a la IP privada del User Agent (192.168.1.34).


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.

 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
    - Se está haciendo uso de un cliente STUN porque SIP utiliza paquetes UDP para señalizar tráfico de archivos multimedia, pero no permite establecer una comunicación cuando los extremos se encuentran detrás de un NAT. El STUN permite encontrar una IP pública para el cliente, y un puerto para permitir el tráfico entrante a la red del cliente.
    
 ** ¿Estamos tras un NAT?
    - Si, ya que estamos usando el protocolo STUN.


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.

 ** ¿Qué dirección IP tiene el servidor Registrar?
    - La dirección del Registrar es 86.64.162.35
    
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
    - Al puerto 5063.
    
 ** ¿Qué método SIP utiliza el UA para registrarse?
    - El método REGISTER
    
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
    - INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER y MESSAGE, como podemos observar en el campo Allow en las cabeceras de la petición SIP.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


9. Fijémonos en las tramas siguientes a la número 46:

 ** ¿Se registra con éxito en el primer intento?
    - No, el servidor no autoriza el registro. En el paquete 50 podemos ver que el servidor responde con código 401 Unauthorized.
    
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    - Sabemos que se ha realizado correctamente cuando vemos que el servidor nos responde con un "200 OK", como podemos ver en el paquete 54.
    
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
    - El primer intento tiene un tamaño de 523 bytes, el segundo de 712. Esto se debe a que en el primer paquete enviado no va el campo Authorization en la cabecera, con la información de autenticación pertinente del user agent para el servicio que se está pidiendo.
    
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
    - 3600 segundos.


10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.

 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
    - Si, Gregorio Robles, dirección SIP "grex@ekiga.net"
    
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
    - El cuerpo de la trama es una descripción de los formatos multimedia a usar y utiliza el protocolo SDP (Session Description)
    
 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
    - No tiene éxito, el servidor contesta con otro error, esta vez el 507. Logrará conectarse al segundo intento como podemos observar en la trama 105 de la captura.
    
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
    - El segundo INVITE contiene mensajes de autenticación necesarios para realizar la conexión con el servidor, más concretamente es la información necesaria para que el proxy establezca la llamada.


11. Una vez conectado, estudia el intercambio de tramas.

 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
    - Una vez establecida la conexión, se ven cuatro paquetes DNS y el resto hasta que se desconecta son todos H.261 y RTP. Al ser una transmisión de elementos multimedia es normal que se use el formato RTP, que transmite las tramas en tiempo real sin necesitar un grado mínimo de fiabilidad aumentando la velocidad de intercambio, mientras que H.261 es más bien un codificador de la información transferida.
    
 ** ¿Cuál es el tamaño de paquete de los mismos?
    - Los paquetes de H.261 pesan alrededor de 1000 bytes cada vez, mientras que los RTP son siempre 214.
    
 ** ¿Se utilizan bits de padding?
    - Podemos observar en la cabecera que el campo Padding tiene valor "False", por lo que deducimos que no hay relleno.
    
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
    - Se envían cada 20 milisegundos aproximadamente.
    
 ** ¿Cuántos bits/segundo estamos enviando?
    - 160 bytes de paquete cada 20 milisegundos dan un total de 8000 bytes cada segundo, y al pasarlo a bits obtenemos 64 kb por segundo.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.

 ** ¿Cuántos flujos hay? ¿por qué?
    - Tenemos dos flujos, ya que provienen de puertos diferentes.
    
 ** ¿Cuántos paquetes se pierden?
    - Podemos observar que el "Lost" tiene valor 0%, por lo tanto, ninguno.
    
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
    - Para el primer flujo el valor máximo es de 1290'479 y para el segundo es 1290'444. El valor de delta es el equivalente a la diferencia entre el tiempos de llegada del paquete actual y el previo.
    
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
    - Primer flujo, 153'24 de valor medio y 183'096 de valor máximo, y para el segundo flujo, 42'5 de valor medio y 119'635 de valor máximo. El jitter es el retardo máximo de las tramas a la hora de atravesar la red, por lo que la conversación es de calidad ya que son valores muy bajos.


13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.

 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
    - Vale 0 para ambos casos. En el caso del delta no puede ser de otra manera ya que no hay un segundo paquete que establezca el valor.
    
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
    - No, ya que RTP va encapsulado en UDP y no hay retransmisión por pérdida. Lo que sí podemos saber es que es el primero que nos ha llegado.
    
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
    - Hasta el paquete 247.
    
 ** ¿A qué se debe el cambio tan brusco del jitter?
    - Se debe a que ha habido una reducción en el ancho de banda.
    
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
    - Si, ya que a más retardo en la transmisión, más tiempo entre paquetes recibidos.
     
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
    - Cuando aumenta delta, el valor del jitter también aumenta por el incremento en el tiempo de llegada del último paquete.
    

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.

 ** ¿Cuánto dura la conversación?
    - La conversación dura 20'9 segundos.
    
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    - Tiene dos SSRC, 0xbf4afd37 y 0x43306582, y no hay CSRCs.


15. Identifica la trama donde se finaliza la conversación.

 ** ¿Qué método SIP se utiliza?
    - Utiliza el método BYE.
    
 ** ¿En qué trama(s)?
    - En las tramas 924, 925, 927 y 933.
    
 ** ¿Por qué crees que se envía varias veces?
    - Porque no ha recibido la confirmación ACK del servidor.


16. Finalmente, se cierra la aplicación de VozIP.

 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
    - Para eliminar de su base de datos a ese User Agent, se realiza un nuevo REGISTER pero esta vez con tiempo de expiración 0, para que el servidor Registrar lo elimine.
    
 ** ¿En qué trama sucede esto?
    - En la 952.
    
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
    - Difiere en el tiempo de expiración.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:

 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
    - Es necesario el uso de DNS pero no de STUN, ya que el propio DNS nos está devolviendo la IP de nuestro terminal en el aula.
    
 ** ¿Son diferentes el registro y la descripción de la sesión?
    - No, en todo caso el registro difiere en el nombre de usuario y la dirección SIP. En el caso de la descripción si se ven cambios


18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
 ** ¿Cuál es su periodicidad?
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
